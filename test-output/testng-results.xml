<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="14" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-19T17:54:26 IST" name="Loan Department" finished-at="2025-10-19T17:54:26 IST" duration-ms="39">
    <groups>
      <group name="Smoke">
        <method signature="Demo.secondTest()[pri:0, instance:TestNG.Test1.Demo@5aebe890]" name="secondTest" class="TestNG.Test1.Demo"/>
        <method signature="Demo2.demo2()[pri:0, instance:TestNG.Test1.Demo2@7494f96a]" name="demo2" class="TestNG.Test1.Demo2"/>
        <method signature="Demo4.LoginAPIHome()[pri:0, instance:TestNG.Test1.Demo4@687e99d8]" name="LoginAPIHome" class="TestNG.Test1.Demo4"/>
        <method signature="Demo3.MobileSigninCar()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" name="MobileSigninCar" class="TestNG.Test1.Demo3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2025-10-19T17:54:26 IST" name="Car Loan" finished-at="2025-10-19T17:54:26 IST" duration-ms="28">
      <class name="TestNG.Test1.Demo2">
        <test-method is-config="true" signature="bfSuit()[pri:0, instance:TestNG.Test1.Demo2@7494f96a]" started-at="2025-10-19T17:54:26 IST" name="bfSuit" finished-at="2025-10-19T17:54:26 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfSuit -->
      </class> <!-- TestNG.Test1.Demo2 -->
      <class name="TestNG.Test1.Demo3">
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="beforeEveryMethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="MobileSignOutCar(java.lang.String,java.lang.String)[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="MobileSignOutCar" data-provider="getData" finished-at="2025-10-19T17:54:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FirstUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FirstPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCar -->
        <test-method is-config="true" signature="afterEverymethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="afterEverymethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEverymethod -->
        <test-method signature="MobileSignOutCar(java.lang.String,java.lang.String)[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="MobileSignOutCar" data-provider="getData" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SecondUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SecondPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCar -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="beforeEveryMethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method is-config="true" signature="afterEverymethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="afterEverymethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEverymethod -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="beforeEveryMethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="MobileSignOutCar(java.lang.String,java.lang.String)[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="MobileSignOutCar" data-provider="getData" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ThirdUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ThirdPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCar -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="beforeEveryMethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method is-config="true" signature="afterEverymethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="afterEverymethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEverymethod -->
        <test-method signature="WebLoginCar(java.lang.String)[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="WebLoginCar" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.CarLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginCar -->
        <test-method is-config="true" signature="afterEverymethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="afterEverymethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEverymethod -->
        <test-method signature="MobileSigninCar()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="MobileSigninCar" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSigninCar -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="beforeEveryMethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method is-config="true" signature="afterEverymethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="afterEverymethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEverymethod -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="beforeEveryMethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="APICar()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="APICar" finished-at="2025-10-19T17:54:26 IST" depends-on-methods="TestNG.Test1.Demo3.WebLoginCar, TestNG.Test1.Demo3.MobileSignOutCar" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APICar -->
        <test-method is-config="true" signature="afterEverymethod()[pri:0, instance:TestNG.Test1.Demo3@34f7cfd9]" started-at="2025-10-19T17:54:26 IST" name="afterEverymethod" finished-at="2025-10-19T17:54:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEverymethod -->
      </class> <!-- TestNG.Test1.Demo3 -->
      <class name="TestNG.Test1.Demo">
        <test-method is-config="true" signature="afSuit()[pri:0, instance:TestNG.Test1.Demo@5aebe890]" started-at="2025-10-19T17:54:26 IST" name="afSuit" finished-at="2025-10-19T17:54:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSuit -->
      </class> <!-- TestNG.Test1.Demo -->
    </test> <!-- Car Loan -->
    <test started-at="2025-10-19T17:54:26 IST" name="Personal" finished-at="2025-10-19T17:54:26 IST" duration-ms="39">
      <class name="TestNG.Test1.Demo2">
        <test-method is-config="true" signature="preRequisite()[pri:0, instance:TestNG.Test1.Demo2@7494f96a]" started-at="2025-10-19T17:54:26 IST" name="preRequisite" finished-at="2025-10-19T17:54:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preRequisite -->
        <test-method signature="demo2()[pri:0, instance:TestNG.Test1.Demo2@7494f96a]" started-at="2025-10-19T17:54:26 IST" name="demo2" finished-at="2025-10-19T17:54:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo2 -->
        <test-method signature="justToTestParameters(java.lang.String)[pri:0, instance:TestNG.Test1.Demo2@7494f96a]" started-at="2025-10-19T17:54:26 IST" name="justToTestParameters" finished-at="2025-10-19T17:54:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.PersonalLoanl.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- justToTestParameters -->
      </class> <!-- TestNG.Test1.Demo2 -->
      <class name="TestNG.Test1.Demo4">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestNG.Test1.Demo4@687e99d8]" started-at="2025-10-19T17:54:26 IST" name="beforeClass" finished-at="2025-10-19T17:54:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="LoginAPIHome()[pri:0, instance:TestNG.Test1.Demo4@687e99d8]" started-at="2025-10-19T17:54:26 IST" name="LoginAPIHome" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHome -->
        <test-method signature="MobileLoginHome()[pri:0, instance:TestNG.Test1.Demo4@687e99d8]" started-at="2025-10-19T17:54:26 IST" name="MobileLoginHome" finished-at="2025-10-19T17:54:26 IST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at TestNG.Test1.Demo4.MobileLoginHome(Demo4.java:18)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
at --- Async.Stack.Trace --- (captured by IntelliJ IDEA debugger)
at java.base/java.util.concurrent.FutureTask.<init>(FutureTask.java:132)
at java.base/java.util.concurrent.AbstractExecutorService.newTaskFor(AbstractExecutorService.java:113)
at java.base/java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:305)
at org.testng.internal.thread.ThreadUtil.execute(ThreadUtil.java:70)
at org.testng.SuiteRunner.runInParallelTestMode(SuiteRunner.java:442)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:371)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHome -->
        <test-method signature="WebLoginHome()[pri:0, instance:TestNG.Test1.Demo4@687e99d8]" started-at="2025-10-19T17:54:26 IST" name="WebLoginHome" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHome -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestNG.Test1.Demo4@687e99d8]" started-at="2025-10-19T17:54:26 IST" name="afterClass" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- TestNG.Test1.Demo4 -->
      <class name="TestNG.Test1.Demo">
        <test-method signature="demo(java.lang.String)[pri:0, instance:TestNG.Test1.Demo@5aebe890]" started-at="2025-10-19T17:54:26 IST" name="demo" finished-at="2025-10-19T17:54:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.LoanDepartment.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method signature="secondTest()[pri:0, instance:TestNG.Test1.Demo@5aebe890]" started-at="2025-10-19T17:54:26 IST" name="secondTest" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
        <test-method is-config="true" signature="lastTest()[pri:0, instance:TestNG.Test1.Demo@5aebe890]" started-at="2025-10-19T17:54:26 IST" name="lastTest" finished-at="2025-10-19T17:54:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastTest -->
      </class> <!-- TestNG.Test1.Demo -->
    </test> <!-- Personal -->
  </suite> <!-- Loan Department -->
</testng-results>
